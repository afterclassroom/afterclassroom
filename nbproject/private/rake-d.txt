asset\:packager\:build_all=Merge and compress assets
asset\:packager\:create_yml=Generate asset_packages.yml from existing assets
asset\:packager\:delete_all=Delete all asset builds
auth\:gen\:site_key=Generates config/initializers/site_keys.rb
db\:abort_if_pending_migrations=Raises an error if there are pending migrations
db\:bootstrap=Recreates the development database and loads the bootstrap fixtures from db/boostrap.
db\:bootstrap\:load=Load fixtures from db/bootstrap into the database
db\:charset=Retrieves the charset for the current environment's database
db\:collation=Retrieves the collation for the current environment's database
db\:create=Create the database defined in config/database.yml for the current RAILS_ENV
db\:create\:all=Create all the local databases defined in config/database.yml
db\:demo_data\:load=Load demo data
db\:demo_data\:reload=Reload demo data
db\:demo_data\:remove=Remove demo data
db\:drop=Drops the database for the current RAILS_ENV
db\:drop\:all=Drops all the local databases defined in config/database.yml
db\:fixtures\:identify=Search for a fixture given a LABEL or ID.
db\:fixtures\:load=Load fixtures into the current environment's database.  Load specific fixtures using FIXTURES=x,y
db\:migrate=Migrate the database through scripts in db/migrate. Target specific version with VERSION=x. Turn off output with VERBOSE=false.
db\:migrate\:down=Runs the "down" for a given migration VERSION.
db\:migrate\:redo=Rollbacks the database one migration and re migrate up. If you want to rollback more than one step, define STEP=x
db\:migrate\:reset=Resets your database using your migrations for the current environment
db\:migrate\:up=Runs the "up" for a given migration VERSION.
db\:reset=Drops and recreates the database from db/schema.rb for the current environment.
db\:rollback=Rolls the schema back to the previous version. Specify the number of steps with STEP=n
db\:schema\:dump=Create a db/schema.rb file that can be portably used against any DB supported by AR
db\:schema\:load=Load a schema.rb file into the database
db\:sessions\:clear=Clear the sessions table
db\:sessions\:create=Creates a sessions migration for use with CGI::Session::ActiveRecordStore
db\:structure\:dump=Dump the database structure to a SQL file
db\:test\:clone=Recreate the test database from the current environment's database schema
db\:test\:clone_structure=Recreate the test databases from the development structure
db\:test\:load=Recreate the test database from the current schema.rb
db\:test\:prepare=Check for pending migrations and load the test schema
db\:test\:purge=Empty the test database
db\:version=Retrieves the current schema version number
default=
doc=
doc/api=
doc/api/index.html=
doc/app=
doc/app/index.html=
doc\:app=Build the RDOC HTML Files
doc\:clobber=
doc\:clobber_app=Remove rdoc products
doc\:clobber_plugins=Remove plugin documentation
doc\:clobber_rails=Remove rdoc products
doc\:plugins=Generate documentation for all installed plugins
doc\:plugins\:aasm=
doc\:plugins\:active_merchant=
doc\:plugins\:activity_tracker=
doc\:plugins\:acts_as_commentable=
doc\:plugins\:acts_as_network=
doc\:plugins\:acts_as_taggable_on_steroids=
doc\:plugins\:ajaxful-rating=
doc\:plugins\:asset_packager=
doc\:plugins\:configatron_rails=
doc\:plugins\:debug-view-helper=
doc\:plugins\:dhtml-calendar=
doc\:plugins\:ez_where=
doc\:plugins\:geokit-rails=
doc\:plugins\:jrails=
doc\:plugins\:juggernaut=
doc\:plugins\:named_scope_for_time_attr=
doc\:plugins\:paperclip=
doc\:plugins\:rails_money=
doc\:plugins\:recaptcha=
doc\:plugins\:resource_hacks=
doc\:plugins\:restful_authentication=
doc\:plugins\:role_requirement=
doc\:plugins\:rspec=
doc\:plugins\:rspec-rails=
doc\:plugins\:sexy_flash=
doc\:plugins\:simple_private_messages=
doc\:plugins\:thinking-sphinx=
doc\:plugins\:will_paginate=
doc\:plugins\:yaml_mail_config=
doc\:rails=Build the RDOC HTML Files
doc\:reapp=Force a rebuild of the RDOC files
doc\:rerails=Force a rebuild of the RDOC files
environment=
gems=List the gems that this rails application depends on
gems\:base=
gems\:build=Build any native extensions for unpacked gems
gems\:install=Installs all required gems for this application.
gems\:unpack=Unpacks the specified gem into vendor/gems.
gems\:unpack\:dependencies=Unpacks the specified gems and its dependencies into vendor/gems
jrails\:js\:install=Copies the jQuery and jRails javascripts to public/javascripts
jrails\:js\:scrub=Remove the prototype / script.aculo.us javascript files
juggernaut\:compile_flash=Compile the juggernaut flash file
juggernaut\:reinstall=Reinstall the Juggernaut js and swf files
log\:clear=Truncates all *.log files in log/ to zero bytes
noop=
notes=Enumerate all annotations
notes\:fixme=Enumerate all FIXME annotations
notes\:optimize=Enumerate all OPTIMIZE annotations
notes\:todo=Enumerate all TODO annotations
paperclip\:refresh=Regenerates thumbnails for a given CLASS (and optional ATTACHMENT)
rails\:freeze\:edge=Lock to latest Edge Rails, for a specific release use RELEASE=1.2.0
rails\:freeze\:gems=Lock this application to the current gems (by unpacking them into vendor/rails)
rails\:unfreeze=Unlock this application from freeze of gems or edge and return to a fluid use of system gems
rails\:update=Update both configs, scripts and public/javascripts from Rails
rails\:update\:configs=Update config/boot.rb from your current rails install
rails\:update\:javascripts=Update your javascripts from your current rails install
rails\:update\:scripts=Add new scripts to the application script/ directory
routes=Print out all defined routes in match order, with names.
secret=Generate a crytographically secure secret key. This is typically used to generate a secret for cookie sessions. Pass a unique identifier to the generator using ID="some unique identifier" for greater security.
spec=Run all specs in spec directory (excluding plugin specs)
spec\:clobber=
spec\:clobber_rcov=Remove rcov products for rcov
spec\:controllers=Run the specs under spec/controllers
spec\:db\:fixtures\:load=Load fixtures (from spec/fixtures) into the current environment's database.  Load specific fixtures using FIXTURES=x,y
spec\:doc=Print Specdoc for all specs (excluding plugin specs)
spec\:helpers=Run the specs under spec/helpers
spec\:lib=Run the specs under spec/lib
spec\:models=Run the specs under spec/models
spec\:plugin_doc=Print Specdoc for all plugin specs
spec\:plugins=Run the specs under vendor/plugins (except RSpec's own)
spec\:plugins\:rspec_on_rails=Runs the examples for rspec_on_rails
spec\:rcov=Run all specs in spec directory with RCov (excluding plugin specs)
spec\:server\:restart=reload spec_server.
spec\:server\:start=start spec_server.
spec\:server\:stop=stop spec_server.
spec\:statsetup=
spec\:views=Run the specs under spec/views
stats=Report code statistics (KLOCs, etc) from the application
test=Run all unit, functional and integration tests
test\:functionals=Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional
test\:integration=Run tests for integrationdb:test:prepare / Run the integration tests in test/integration
test\:plugins=Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name)
test\:recent=Run tests for recentdb:test:prepare / Test recent changes
test\:uncommitted=Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion)
test\:units=Run tests for unitsdb:test:prepare / Run the unit tests in test/unit
thinking_sphinx\:app_env=
thinking_sphinx\:configure=Generate the Sphinx configuration file using Thinking Sphinx's settings / Generate the Sphinx configuration file using Thinking Sphinx's settings
thinking_sphinx\:index=Index data for Sphinx using Thinking Sphinx's settings / Index data for Sphinx using Thinking Sphinx's settings
thinking_sphinx\:rebuild=Stop Sphinx (if it's running), rebuild the indexes, and start Sphinx / Stop Sphinx (if it's running), rebuild the indexes, and start Sphinx
thinking_sphinx\:reindex=Reindex Sphinx without regenerating the configuration file / Reindex Sphinx without regenerating the configuration file
thinking_sphinx\:restart=Restart Sphinx / Restart Sphinx
thinking_sphinx\:running_start=Stop if running, then start a Sphinx searchd daemon using Thinking Sphinx's settings / Stop if running, then start a Sphinx searchd daemon using Thinking Sphinx's settings
thinking_sphinx\:start=Start a Sphinx searchd daemon using Thinking Sphinx's settings / Start a Sphinx searchd daemon using Thinking Sphinx's settings
thinking_sphinx\:stop=Stop Sphinx using Thinking Sphinx's settings / Stop Sphinx using Thinking Sphinx's settings
thinking_sphinx\:version=Output the current Thinking Sphinx version / Output the current Thinking Sphinx version
time\:zones\:all=Displays names of all time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6
time\:zones\:local=Displays names of time zones recognized by the Rails TimeZone class with the same offset as the system local time
time\:zones\:us=Displays names of US time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6
tmp\:cache\:clear=Clears all files and directories in tmp/cache
tmp\:clear=Clear session, cache, and socket files from tmp/
tmp\:create=Creates tmp directories for sessions, cache, and sockets
tmp\:pids\:clear=Clears all files in tmp/pids
tmp\:sessions\:clear=Clears all files in tmp/sessions
tmp\:sockets\:clear=Clears all files in tmp/sockets
ts\:conf=Generate the Sphinx configuration file using Thinking Sphinx's settings / Generate the Sphinx configuration file using Thinking Sphinx's settings
ts\:config=Generate the Sphinx configuration file using Thinking Sphinx's settings / Generate the Sphinx configuration file using Thinking Sphinx's settings
ts\:in=Index data for Sphinx using Thinking Sphinx's settings / Index data for Sphinx using Thinking Sphinx's settings
ts\:index=
ts\:rebuild=Stop Sphinx (if it's running), rebuild the indexes, and start Sphinx / Stop Sphinx (if it's running), rebuild the indexes, and start Sphinx
ts\:reindex=Reindex Sphinx without regenerating the configuration file / Reindex Sphinx without regenerating the configuration file
ts\:restart=Restart Sphinx / Restart Sphinx
ts\:run=Stop if running, then start a Sphinx searchd daemon using Thinking Sphinx's settings / Stop if running, then start a Sphinx searchd daemon using Thinking Sphinx's settings
ts\:start=Start a Sphinx searchd daemon using Thinking Sphinx's settings / Start a Sphinx searchd daemon using Thinking Sphinx's settings
ts\:stop=Stop Sphinx using Thinking Sphinx's settings / Stop Sphinx using Thinking Sphinx's settings
ts\:version=Output the current Thinking Sphinx version / Output the current Thinking Sphinx version
